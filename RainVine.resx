<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAaJAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAACPUSURBVHja7V0JfJx1mf4mKTnaJG16lx6hR5KmaXPOfHMkM8lMMrnatAEWaLkWsKhF
        DgWUBWRFXNR1CwsLrC7Xz2MR1FUBXQ9cUFz9CaLIWUB0BVFOOQoipRzd9/ny/+o0JjPfZI7v+2ae/H7v
        bzIzz8x8x/v8z+d9X02b8Nff3zvRPMqM58QRR5z7cZP+TfLBUrEZYiWJX0AcccS5F5eITUb+g8TK1Rd4
        JmlZiCOOOHfjpiQ/PjhTPSb7EeKII86dOAM72YcrxarFKpJ8uIQ44ohzLc6cHpRO1nJUq9ajJMmP4P3Z
        xBFHnOtw5vQAVjLxxZmq5eDFIo64wiR/hbIZxhqAeqNU9f7lKYYXvKjEEedeHKYHs8TKTJ6brcKMFKuF
        vKjEEed+XM3EtQGzASgh+YkjrihwB/BcS7JFwItFHHEFjJtKOsiLRRxxRYKbSgnIi0UccYWPI/mJI65Y
        yZ9MCciLRRxxha0HoBKQOOKoBKQSkDjiqASkEpA44qgEJPmJI45KQF4s4oijEpAXizjiqATkxSKOOCoB
        eVGJI45KQOKII45KQF5U4oijEpA44oijEpA44oijEpA44oijEpA44oijEpA44oijEpA44oijEpA44oij
        EpA44oijEpA44oijEpA44oijEpA44oijEpA44oijEpA44oijEpA44oijErBwcYFAQFu/foOm6z5twYLl
        2ubNg2WDg7HqjRvj5Y2N6zSv16t1dnYaxutHHJWABYTzejuF+F6D5NIAVIpFfD7fOfL8EiH8xWIniTV2
        dHSUoAGQRoHXjzgqAQsB19LSrLW2jvfwYqvErhF7XuxdIfs+ZW+JPS52jljN7bdfr/H6EUclYAHggsGg
        Jr09yL9c7Lti+2AJ5E+0vWKf6e4OzY3HozW8fsRRCehynN+vy/xfLxXSX5yC/IbJ+6/KFGHbyEg/t2iJ
        oxKwEIZdgYC/Xoj9qAXym/Zln89biZEDrzNxVAK6GDcyEi+XUcAmIfVui+TH8wfFFk7YEeB1Jo5KQLfh
        hof7q6Q3P0bI/LpF8sOeElvOLUHiqAR0OW50dLBciHyk2F8skh/2BywaJjQAvM7EUQnoRlx9/VqIe/5u
        sgZgCvLvbwCwdcjrTByVgC7GKYXf3zQASci/vwFQuza8zsRRCehWnJL3HtAApCC/0QD4fN66oaG+Cl5n
        4qgEdDFuYgNggfxGAxAI+BsHBmLcpSGOSkA34xIbAIvkx/t/DAYDzWoEwOtMHJWAbsWZawDy+BeL5Dca
        ABkBNCQZtfE6E0cloBtwa9Y0ajKfP9psACyKgbAGsELtAvA6E0cloFtxmzYNlOu673g0AGkoASfqAHid
        iaMS0MVKwGOnEgJNsTA4WQPA60wclYBUAvI6E0clIJWAvM7EUQlIJSCvM3EFrwSMxw0ricejlQMD0ZrB
        wVjloYeOeHp7u7XW1lYqAW0+X7kvM3fuPGd/YlOVAYkkpBIwcxENHs8//xQNGXIika7FwaC/TpxrYUdH
        R/kkmXSpBMwjThrl2chqHAoFD5JjnoscBnJe1evXrzcaAGkYSEIqAaeH6+jo1Hp6wsbxCumXSa9ymjjV
        LeJkvxK7R+xLYkeIVTl5rlyoSkCMxHp6umvkWKNyzFeK/VTsfrHvif2DvL4GIzWSkErAaQ1XotGI8ajr
        ers403fE9k5Clj+LXYvkGcPD/Y4cLheiEhAjk66u4AI53vPFnp3iPO6Ve3co8NIQeDCNIwmpBLSEk97F
        IL/fr68VR7rTAmlukR5zvWoECkQJ6Fshn3My+T8l9kaK8/g/sV6sCciUjWSlEtAaTuaVHgwvhQBXpEGa
        78rzegy5VQ5+JykBj5HjeT0NJeDv5HGp05SAaZLffO02sXk4l6amOpKVSsDUOMx9ZQjcKU70ZBqkgX0f
        FXbgbOhx4vGo7TdJzqVKekDMk19M4zx+JDbHSUrAaZJ/n8qFOIZzccL9oBLQBUrAcfms75g05bOm/VBs
        PYbPMpXw2H2ThDiVXq/RA96RxnmcG4/HE4fNbiW/aZ/o7DQaZA/JSiVgStzmzUNlQpoTxXHenIazwX4i
        1uGEhUFshWEOLMezWex5C+eB1fQ69JhYCykA8sMu6+npKonHSVYqAS3gVq1qAGEGxV6dhrOZuHv8fj06
        PNxXMb4KHbXlfPG76Mnb29tL5bjeZ04FpooBEDMWzSKR7kIhvzGiwVoIyUolYDry2YPF7p0m+U27T553
        4/uEgBqGoTaKgWAzxLbK8Twg9s6E83hF7CwhfwnKiRUQ+f8k07E41kJIVioB05HPwk4R2zNN8puvPYit
        KF3XjZ7YrmH14GCfNjo66IE4Jhj0twgpTpVj+3exL4qhTPhGOc4KXfcVEvnx/vWRSNdCyIVJVioB0+ox
        ISuVR2wFvjVN8pv2iFg8EAhAUmz7QhR2ORoa1mktLS0lMjIpq6urM84XjVSBkf92aew2MLchlYBp48Rp
        jOMNhYIHy7D4s1MoAdNxysfFNiGgCBp2u8+3p6fbGJGYViCr/Ym4O7CVS/JTCZixU4ZCgUXiVP9iTgcy
        cMonpZc9BsPR0dEBj3w3nSOH5McujAoI4nWmEnD6OIwEpJecJc71T2nG1U8qsxXbGg6HPRMiCUl+kp9K
        QCee3PBwn6bUfZXyeIEKAspkYfAZsWNaW1s9xZ52i+SnEtDxJ3fEEWNaQux/hQo3fS3DhUHsucdUA1Ck
        5I/WyPRqidqFIPmpBHT2yYlzaR/72KlaJNI1x+fznStOtzvDhcFb5XtmCxGKMm69tzeMXZaPiu0l+akE
        dM3JiZMhGcVscb4PTBVkY9F5X9J131AxilSgkJTzXyv2W5KfSkDXndxxxx3u6ejogLx2u9gL010YlBHA
        eZs3D5blSgacmLYM/+MPZEGjMzISr1i0aMUBGFggkHs9QENDE37rqMmG/iQ/lYCOPzko60CW1tbWEnk8
        Xi3sTWdh8FMNDc1ad3coa8d33nk79pN6XILcidoAtfLaEr/f3+z3610y8ujxejuDneN/TchqJIbFuCqZ
        l89Ao4RGAvvoY2PDnlisR9N1f7bl1u8Xe5vkpxLQzaW3QTKs5m9DKq1pLAx+EGRobm7OeEENAS8jIwMl
        Kpa/BTsN46GwnTeI/Vh+5zGxZ8QwYvmTshdUWq0nVezDt+X9z8nI5B98Pu8oIgPl/3LVkBiGxiBLcusj
        E0cAJD+VgK47ucHBmLZ585Ah75Ve9Vhxzt+nQX6QL2AmELH6u42Na42YAmQuUiSoCQYDyFY8rLbT7lSk
        3pOBXuFdeY5FzkdVA4LeulleL6+rW6Mhz0AWGs8m1fCQ/FQCuvsimPJecdLRNBa2bhWrtioGisV6tba2
        Nk2G8dqiRXVab2+4RsgQlO+7SL7jLkXYTBbUkuEwVEfjdoO8f3RXV3AVFvL27dtnhA6nmz5MhSgjOvES
        kp9KwIK4CCMjcY9KvoFcArtSkAuxARFzrp7qdxVhDKz09gfJaKNbhuhXpzniyBYOCUZ/qkYFi3BsOK5o
        NJ3EqzFjRCiErkc+RSuBPSQ/lYCOxmFYDkKjlxan1cVuRq88gVyvqtz1Pd3d4z2nSlk96e+uW9eshUIh
        owHAo9fb2Sjfc6nY01km9XRwe1X2o2PNkQySn6SrBPT79QaV2x/TlncTfhMZmR6X39tp1ikg+akEdDTO
        zAisbI700ltkVPBx+R/BROeKDWFF3kxVnSw/AIqTmL2r9P4g2MnyPQ/lmNTTwSHx5lfFfBA1YU0i3VgL
        hCWrRvMMtY5xofzWcbqut8RikdrBQUb1UQnoMhwWyoaG+qtQolvTyg/Yb29paUmapdbct09YLPuSPH/D
        geRPxP1WGrYzurtDC8rK5mhmyLHVtGXmOWONo6lpAxZXy2REUc1kHlQCuhqHwqLY58cc3kq9AJMMwWAQ
        24sj2J6zkdTp4hAteb3YGhROTSfasb6+UZPeHusDzN5LJWBxXtQEbQFWyN8j9rSLyJ/4+s0Tdjh4f6kE
        JPmtkF+IhPnwaYgVcCn5Eel4jliZExKMEkcloONxCXNgyHY/gt0CF5L/dyq0twMjGCckGCWOSkBXkB+m
        4gqQrfc1l5H/GUX8DW1tbSXjCUZJfuKKSAmYhZ4fj0egeo+LyP+aPP+KWBg1B8xzgTyaZCCu6JSA08k0
        ZKr7hDwg0W9cRP5fIgBK5Urcv7VJMhBXtErAdHEQAyVUIbrDJeSHsvEqsdUm8X0+3WjIsr1qjEco/1DT
        D7EW49mUBz1YWMR1CwaDiSHKJCGVgO5SDKqe/yB5/DSi71xA/oek0To6ENArxonvs6RrsHJdIP5JTEoC
        W7u2WUPSkr6+njkq8Klcfg/Xq7S+vt6YPuH3V69uNJKcQFYMJSJ0BFBYNjXVkaxUAjoTp4KGYGPixC85
        nPxvi90qPa9X02Zq6IEx3Ed0YibXBUrJefOWqlGED9mVaoXUGFlExY6T3zxHXt+J/ATy/FolMLpODM8v
        FfsY0rL5fN6t0oD0SgOxRtd91evXNx/QkEBcRLJSCegYnLnoJ3YwouocTv7dQsLPBIP+ZbW1B2vhsBGQ
        lPZ1gdwXw3n00MPDfVUYzgtxa1XiEgiePqsCi55CoVL53T0Wj+8dFZ2I3IyPiX1LxRJgQXUNsjivXNmg
        jQcSkaxUAjoAFwoFxSGN0OFzVe/qVPI/K8d4OhKgmnPylpZWy+dr5i+QnlkrKakxSNjdHVou37kR0x6x
        H6otxL05OI83lC7hy/J72+UYWuU8alaurDdGX+biK8lKJWBecZibaloZhtEbxHEfdTD5f6Pr+tEy/551
        1FGbPaiVaPV88WdmOcKjNHgz5HzbkGZMvhekfznP57tXDPkXrlZZk6rNNRgELJGsVALmDYd4eaxqCxku
        Umm3nEj+h2UuvXFwsK8SacfSqWGYOPeW3h/z+nb5vsvEnsBw3QHnu1tlYjpSXp+raVVasdZloBLQBhxI
        heQW4nwPOpf8OmoVIHW4R4UsWwrpNYfV8h2IYmwX+1dkLHLoGgdyGNyOXY1wuGuxNHTlw8P9HiViIqmp
        BMwNDvkBfD7vB6aqhmMz+XeB/EKCCmmoLJMfpDG35JAiTOw8zL9domuA7PpGee5vaWkxajXOnz9fzsNL
        UlMJmP2KQkiWoYagTiPD72TYP4qePx3y9/X1GMRXeoYRtbD3tgsDmX6vGq554+nXgiQ1lYDZxY2M9FeI
        w3nNIiIOIsPzQv7jpSevTGfYD5Ko+f5Ctar/ogNDk9PBvSX2TUxfLrnkbE1lIiKpqQTMDm7FitUgywcn
        JL60mwx/lnnwmbFYpGp0dMCjchRaUO7p5pC/Te29v+Ny8ifaIzJNO7G3NzwfjSJJTSVgxrgjjhjF/LJS
        7GsOIsM74uhXhMOh2hNOONLyAphKaIqw38PEHnYJqacT83ChnKuxZYgFTpw3yU8lYCa18FaoegBOcfLb
        AgH/IdidGRqyTn753AxVFPW5AiW/iYOYCFuY83D/WlvbSH4qATNK9xVPrN5js5P/Wub9oblzlxpa+dNO
        22GB/F6z0OgZiWKeAiV/YkUkZGReogKfSH6nKgG3bRuvODMy0g/lWsXwcH/Vli1DZWvXrjP064kiFTxv
        aFhnpJ4eGYnPsobrn4UCnKqijaWU13g9EAiY33e6Of+32cmhnX8fynqFQoHEUF4r5Edtg9eKhPyJ9iW5
        BgvhVyS1A5WAZlgq/np7I9VCUEhPj1SBJtsnM/nMDsGcJo9Iw3VyKpw4wPulQYCUdCnCUfGbuq5bKuvV
        1taGNYDLHeLk6NGqxrfvUgf2IL2XnEOpSlRajOSHIejouq6u4AppBLgw6CQlYDg8Hm1m1poTskKBhgKd
        f1aCm7cmmry/3yZ7fwrcXlXa6wGxs+R35ljJfad6fxQO/YYDnBzVfjeMlzBL3fNjpFNXV4fjP1pVMy5G
        8psY+MHlcs+rcN8n5EIg+e1SAmL1Gn9+v79Bbsr38uQcaBA+J+/VpiqVjYUzMSwk/cxmJ0cDdjoy6WBU
        kmpVG8VM1OLlgFnGu4jJb+JQ+OS0aDTqUQIokt9uJaDMyz0IWRWHvirPzvGmTAvOTFULD3Nt6UlXIiLN
        Zuf9oTwuNCP1+i0UOhUsCnf+guQ/APdHLOji+kQiXSS/3UpALMwIwQJyQ56ywTl+EQwGVlxxxUe1ZMcX
        DPrXC/aPNjovpi6Ho9ffsGFDCvLHzGlLldjnSf5JcXdLI1o/Y8ZsjeS3WQmI1XnpiberctL5dg7IX0OT
        zAf3Hx8KXMqcsXUqCXCenPer8v8sVXYs5ZalOLdH7Vq8QfJPibtOpknz0q2GTCVglpWAhx46glJaZ9vk
        HFhoHJuQXeaA40PCSsE22RgD8LIqSy7ETk7+xYsXmyG9fnPeT/JPiXtNGvYThoeRbixK8tulBGxqMpJA
        nmqTxh5D6+Fk6aU0rRLHh2SXT9vkvNh9mJUwSpn0Opvx/GIYKdxA8lvC/VzsEDPDEMlvgxJQXfxhRUY7
        CmE2JauCq45vuQo5zffxvS7PD7eSHdcsX45sOS4sT2YXDp3OxUhVjmucsNXNhcF8KQHVnBWJKH5mg3Mg
        mURlMj2A6lUX2RQ482No2dWWX1KxkjrOJcjOS/KnhXtSZUDSVPo0kj+fSkD0XFDkoVSVSimdL+d4QtXF
        S3p8ilhIgX1nnp0XIbpnoujGwEDUk+w6I3uvKs5xihK8kPzp4S5FbYORkbiH5M+zEnC8AfDByn0+74fk
        Bj2dh5u+C+GwLS2tiDvwpFICSg+Lajo35dkp0TM119Yu0ZIfn9esU7DIBXUKnIp7Ut7rQCUjkt+mnIDx
        eLQyFuuplYagR27ITpWe6kFF1l1qCL5LpeOG7Up4b5cFHCTA31cVadZBJovAo1THFwz6tbGxASjHdubZ
        Kf9TjrEyVWab3t6wNn/+UigDTzILcpDU08JdFotFatX1JvntyAmIlNsLFy5HBJ5Het05au5tGEI6ocgL
        hQL1iIOX54sT37eAg4quJhwOGz0matBZPT5EE6LIBgqB5MkpoYk4cXR0sDzV8b3nPUd5QqHgYvmu20nq
        jHCPyTSqCSNd8UOS366cgJCxJtTeM8iKP6R3QgFJPEKea27dpItDj55+NuA+BJD0yedfypNTPuH3660Q
        IaU6PqTEFuxG+b6XSeqMYy1Ogu8llEqnEpA5AXtnozERx8AK+/15csqbI5GuRZgWWTk+TE9I6qzgvqEi
        P6kEZE7Av+KQcFOVtr42D075rjQ25yN5iQxFkx6fjJZQdvsQ+dw9JHVWcM/I1LMzmS6ESsAizAmI/Plq
        r/2ExKIgOXLKV6QBiC9btirlXBSNhHxuU2KiD5I6IxyEQaeraEsqAZkTcBzn9e5fk6gX+22OnfIhVXo8
        5fENDcUQ9PNJkjq7uy9+v17JugKsDjyZHgDTgOty7JRfaW9vr0iVs/CUU47DMdWI/Q9Jnd26AshMNTzc
        V4W1n0ceuVlTORX3LzZDt4IKTFQCFtkwqa5uDXYoDkdBjhw65YVmrb5UMRRiSPjxFEmd7ShB/fhgMLBU
        JWCZrwxZoWrFEB5uLJIhIS22ahctWrG/kUDGpgKsTUjyq2QblUgsKU5wR46cco/YMROy/iSLUdisQppJ
        6uzh3hV7UmVSSrS7EZsh9h15/ybpCD4rjxeIbRXCdyidSZnZeJ988tZCGSGwOvCBNQLjFWoxcE8OnBIJ
        SoKpVqEbGxtNfcPZJLXtOCRdeV7sPrEvIuegvKdDnAU9CmpKjo0NexKzX1MJ6GLcjTfuRDrueahPn6MA
        pbpURSxUqnKU97qKJHRkCvLnxX6EEYKKNCwz1xASREZUAroRh0SSqvc9PAd59n+OuebXv36ZlqqOgkoR
        dgtJ6Ph8A8g58QXkvJCG26jngFqTVAK6FNfe3mHuCMxUNzabTvQtXffVDAxEraQqny/fczdJ6BrcblW+
        fBNyEUJe7uDAIyoBk+EQe2+W10adviw60Rcjke45qRJVqiIqq1BAheRyHW63z+e9SRr6SDDoL4Ufofxc
        ql0fKgEdhhscjHmg1Zee+FS5ea9nyTmuSiOVegtyJ5BcrsVhp+EcGUnOM/UFqJBFJaCLcOipw+EQbuCV
        kyU1TdM53pRe4b2Q96b6XZWq3JtY4pvkciUOFapu7Rz/QxFbR64NUAmYBIdrgxwEmL9nQn4ZSVzf1RVc
        fOyxh6UcYY2nKu9sm6oBILlch0PimqOi0XC1U+sUUAk4BQ7DNhUo1KiyGKXjHBCd3I9kIyD/lVdeoMnw
        PuXvzp17MBqdlskaAJLLtbgXxQ8+igVC5LEYGenXzjrrVCoBnR8o5N2flw+Ve5Hd2OJN/728/+lg0N8C
        zfn27VuRn9AIPLKYSh3pzJ8luQoKh+KlnzS3C1MVgKUS0CE4JDZFNd5Zs+YjUKTL3J6b4oaj/sEXBBfu
        6+uZgwU9GUV41AKQ5VTqYoeoPWaSq7BwSAf3GfEp1HbUZLpHJaCbcOMLdDrUX9+eZGEQQp+tf90Hnt7v
        qgYAuQ4fI2kKEgeZ+UViFdu3b/P0UwnoLlxNzSIQ9GCVQeg1NVT/Z5/PuxKxBJku9KgGYK7YT0magsUh
        yOuMWCyCjoJKQLdlEFLz9BqVsafL79fLMdzPxu+qOgqoF/hNkqagcS/IfT4afqOKw1AJmG8chuk7dhzr
        MeO9UcUoVaHOxsam/ZmNgV22bKWWzQwzECHhBqmQVJKmsHHIELUBfpQqSQyVgFnGIeW2zNdLVU+OZBAV
        ZhFOO48Pjcno6OBMOY4PTyVAIrkKCnejkL/GSp4IKgGzpPCLRiPVcgO6VZWi28T+F+XBxN7r9XYuydZw
        PhmutbXNqPuHm44RRV3dag0ZaKLR8NyuruACOZZjExOCkDQFi8Oi4A5kG5pOXQsqAdPAIYmDIte5YpNp
        7VF88w6Z00exfy+NRU6KoyQWM2lv7zhIGoBlYhuRMlx+/3rVKP1a7G2Spihwj0D7MW/eUo1KwNyT/1Mq
        00uym/QrRANibWD16tVZOz5VKRnTDGT8XS52tEpEinqHr5IMRY27vKenu8aGXQGSf6q5mUrMkfHxYWFP
        LfRgzQE6/4tVQdM9JANxCvesjDzjqooxlYA2k3+fqhXYm2klmbvuukHmdgH0/M1il0AmTDIQNwXumkDA
        j3qQVALaTH7Tzs5kVwClvZWo50NqTk8nJy4ZDvLvDnOLmUpAe8kP+8Tq1Q1a+vqC6MwTTjgM5Edc/y2J
        Jcfo5MSlwF0Ui8VS6lGoBMw9+bEHf8bY2HBZOseH+gIyhEOVoW0Te306OXEWcPciBwUWoKkEtI/8sGd9
        Pl8PAnvSKTWu676ZKqf/S3Ry4qaBQwq6w+rrmzQqAe0jP96/uqene4HV7K7j5Nexa3Chuol0cuKmi7uq
        txcZhKgEtIv8tweD/vVKEWhh2B9Fz4+qQigW8Rc6OXEZ4u4PhYL16FSoBMw/+e8IBPydVsmPEYKKKdiR
        WEyETk5cBrhXpEMZWLZslUYloA3kR2JOqzLg0tJqrNgOy+efofMSlyUcFqA/iBiRpqYmKgGdSv5ZsxZg
        q2+1ygZE5yUum7j/kP9Ls6FELUgloN3kP/zwjdDzl5tFPOm8xGUZd7s8n51jPYA7lYADA9GaYNC/RIXz
        5p38eK6SiIyKvUznJS4HOJSlOzhHegD3KgGxNdLbG65R2217bSQ/JL7fp/MSlyPcc8gWVFu7RKMS8G8q
        5xiFM560g/zRaMRIFS7fcUzi6IPOS1yWcRhZ9iFzFZWACbi1a5tBvpNU7bW8kj8ha+9sse/SeYnLIe51
        GWluEx+tohLwgMo5BgE/bCP5YXGxV+i8xOUQt0fXfduRJo5KwL8l4cmJI4B8kN/87Y6OjhJ5vIzOS1yO
        cXtlBHByQ0OTRiVgAg7bImK6XKjn80l+swFQ1YLvo/MSl2McFrhPmKADoBJwvAHwVaIGXz7Jj+y9qiDI
        gJm/j85LXA5xe1TOSCoBEw2FNvHn9+vtcqHushLYkyn5YeFwl7Z8+Wo0AhfQeYnLAw4p4ceoBEyiBJRG
        oBPJO80FuQRDOu0n5GJeLuTfoKr0ZvS7W7YMe6QRqJV52VfpvMTlAQefjmaak7KgcwJiJIB662pV/h/F
        roQ60OvtfJ80Dt5oNDLXalRfqt9Fpp+uruBKuUm/oPMSlwfcc2IbclSpqnByAmJubm7PYYX+uOOO9GzZ
        MlSGUt5Wk3lYLQ0ujco6+Z2n6LzE5QH3OKpQq+k5lYBT4XS9U+vtxRw9pMk8P2f11kdG+pHwwyf2Ap2X
        uDzgEAxUi5EnlYAOwK1cWY9RRt8k6w10XuJygbumpyeci0pBrA48PQWisQW4cWLWHzovcbnA+Xzec0dG
        4rOYE9BZCsTRxAaAzktcjnC7dd23WQUCMSegE3CqARgU203nJS7HuEcCAf/qffv2MSegU3CqAehGvn86
        L3E5xn1e1/VyGQWwOrBTcCoGYR2quNJ5icsh7k15fjyiXifUB6QS0E4chmMyLIMQ6DE6L3E5xD0sVocR
        J7ICszqwQ3Ao/tHdHVoqN+k2Oi9xOcTtlP9LchwDUPjVgXOB6+vrmWXmAqDzEpcD3ItiEZC/tbWV1YGd
        hkNyBrk5fz9ZMlI6L3FZwN0qz6tymAqcSsAsiIGaxf5A5yUuy7hXzfDfaDScS3+mEjBDMRCmAbfQeYnL
        Mu6/0Purhb9c+zOVgNMLPNLN6MNTkHOAzktclnAvjWea6sy731MJmHY6MmMa0CCPj9N5icsS7mqxisMO
        2+ixw++pBEwDh5DjWCyCodrldF7isoC7X2ztzJnzNJv8nuRPFzc01Fcl04HgVNWJ6OTEWcQhrmRrDpJ+
        UAmYSxwyDQWD/hly8y6mkxOXAe7ffD5vJURmNvgzlYBZ2BJcJfZLOjlx08ChtNwKlbPSDvJTCZgJrq2t
        zdgVkJu4Te3h0smJs4q7Gwk/kareJvJTCZh5foAOMxFpOeTBcrPfpZMTZwGHYLKITeSnEjCbOBm+GQuo
        gYC+Sm7qD+jkxKXAIdPvpsHBmJ1rbFQCZhuHlOG67kOVknvo5MRNgblPRot9OcjySyWgE3ClpbMxHQjJ
        jX6QZCBugv0EBW1tWvCjEjAfuEDAr/n9fjQCSBt2L8lAnBiy+9wk7zXZOOenEjA/uwLtWnt7uxkr0K4K
        O5AMxYt7RuwjKO7hZPJTCZjlxKFdXUGtqmohqhev9fl8KGH+BslQVDgUpr0T9SqDwUCpzQt+VALauTDY
        3R1aII6wQ+zXJE1R4B4VO1tGgYurqxdpqjalU/2USsBc40466UhPKBTEyKBV7DoV9knSFB4OCWIuFWvq
        6YloNmr7qQR0Em5gILq/crFMB1BcdEglfniZpHE9DmnhHhD7hFiHvIbYEE1Gfh4XkJ9KwPwlEfEZOQQg
        G66rW6OFQoEF8toWee0acZjfTJZfkORyLA5qz+fk+X+LnQwt/9y5c40G3u/X3eKnVALaiZN5Yc3GjQPl
        4jBl4jhrxE4U+7zYQ2IvM9OQo3B7VSWoR30+79fk8Ux57hWrVnEgxs7PwEDMTX5KJaATcOgxzOmBWJk4
        1xKxXnG0M1SykZvk9R+I/VyJix5KsIfl/V3KHp7wHnHp4x5QUZ0/RmZesWvFPi52kozW+mXU1hiJdNUe
        cki9mRFKa2lpMQLCXOp/VAI6AWc6E6YJ+EM1WJSERny4vFYp780Wmy+2UGwRTD6zGBWKxCnr5fEQPDff
        SzTi0sItlEdc59qOjg5ke5qxePFybcuWoTIkf8FW3tjYsKe3Nyz3y1tQfkoloANxMqT0oFFIGCEYjQXK
        k8EZ5f0aPO7b94f9jQhxmeHMRxmBaZs2DXiKyf+oBCSOuOLFkfzEEVes5KcSkDjiihNHJSBxxBUx+akE
        JI64IiU/lYDEEVekOCoBiSOuiHFUAhJHXJHjqAQkjjjiqAQkjriix1EJSBxxVALyYhFHHJWAVAISRxyV
        gLxYxBFHJSAvFnHEUQnIi0occVQC8qISRxyVgLyoxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBx
        xBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBx
        xBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBFHJSBxxBGXAyWguSVYY2FhgTjiiHMhbioloLla
        OGvinIE44ogrGNykDYC5JViRuFqYZD+ROOKIcyfOM1nvX6q+INmuAHHEEede3F+VgJP0/qWTzReII464
        wsP9PzYboei9pCVrAAAAAElFTkSuQmCC
</value>
  </data>
</root>